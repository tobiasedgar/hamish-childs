HTMLCanvasElement.prototype.toBlob||Object.defineProperty(HTMLCanvasElement.prototype,"toBlob",{value:function(t,e,o){var n=this;setTimeout((function(){for(var a=atob(n.toDataURL(e,o).split(",")[1]),i=a.length,s=new Uint8Array(i),p=0;p<i;p++)s[p]=a.charCodeAt(p);t(new Blob([s],{type:e||"image/png"}))}))}}),panel.plugin("rasteiner/k3-maxpixels-option",{use:[function(t){const e=t.options.components["k-upload"],o=t.options.components["k-files-section"],n={extends:e,data:function(){return{maxpixels:!1}},methods:{upload:function(t){this.maxpixels?Promise.all([...t].map(t=>t.type.startsWith("image/")?function(t,e){return new Promise((o,n)=>{const a=new Image,i=document.createElement("canvas"),s=i.getContext("2d");s.imageSmoothingEnabled=!0,a.onload=()=>{if(e<a.height*a.width){const n=Math.sqrt(a.width/a.height),p=Math.sqrt(e);i.width=n*p,i.height=p/n,s.drawImage(a,0,0,i.width,i.height),i.toBlob(e=>{try{o(new File([e],t.name))}catch(n){e.name=t.name,o(e)}},t.type,95)}else o(t)},a.src=URL.createObjectURL(t)})}(t,this.maxpixels):t)).then(t=>{e.options.methods.upload.call(this,t)}):e.options.methods.upload.call(this,t)}}},a={extends:o,props:{maxpixels:{type:[Number,Boolean],default:!1}},components:{"k-upload":n},updated:function(){this.$nextTick(()=>{this.$refs.upload&&(this.$refs.upload.maxpixels=this.maxpixels)})}};t.component("k-upload",n),t.component("k-files-section",a)}]});